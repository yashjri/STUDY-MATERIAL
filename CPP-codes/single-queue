#include <iostream>
using namespace std;
#define n 20
class queue
{
 private:
          int *arr;
          int back;
          int front;
 public:
       queue()
{
    arr=new int[n];
    front=-1;
    back=-1;
}

void push(int x)
{
    if(back==n-1)
    {
        cout<<"Stack is overflow"<<endl;
        return ;
    }
    back++;
    arr[back]=x;
    if(front==-1)
    {
        front++;
    }
}

void pop()
{
    if(front==-1||front>back)
    {
      cout<<"no element in queue"<<endl;
        return ;
    }
    front++;
}

int peek()
{
     if(front==-1)
     {
         cout<<"No element is in queue"<<endl;
     }
    return arr[front];
}

bool empty()
{
    if(front==-1||front>back)
    {
        return true;
    }
    return false;
}
};

int main()
{
    queue q1;
    q1.push(100);
    q1.push(200);
    q1.push(300);
    q1.push(400);
    q1.push(500);
    cout<<q1.peek()<<endl;
    q1.pop();
    cout<<q1.peek()<<endl;
    q1.pop();
    cout<<q1.peek()<<endl;
    q1.pop();
    cout<<q1.peek()<<endl;
    q1.pop();
    cout<<q1.peek()<<endl;
    q1.pop();
    return 0;
}
